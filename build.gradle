plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'com.bookingsoftware'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.3'

	implementation 'com.github.derjust:spring-data-dynamodb:5.1.0'
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'com.google.guava:guava:31.1-jre'
	implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.9.3'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: '2.6.3'


	implementation group: 'io.micrometer', name: 'micrometer-core', version: '1.8.3'
	implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.8.3'
	implementation group: 'io.micrometer', name: 'micrometer-registry-cloudwatch2', version: '1.8.3'

	implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws-actuator', version: '2.2.6.RELEASE'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.6'

	runtimeOnly group: 'software.amazon.awssdk', name: 'bom', version: '2.17.131', ext: 'pom'
	runtimeOnly 'org.apache.logging.log4j:log4j-slf4j18-impl:2.18.0'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
	testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
	testImplementation group: 'org.testcontainers', name: 'testcontainers', version: '1.16.3'

	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
	testImplementation 'net.andreinc:mockneat:0.4.8'
}

//dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-actuator'
//	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.session:spring-session-core'
//	implementation 'com.github.derjust:spring-data-dynamodb:5.1.0'
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
//
//	compileOnly 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
//	annotationProcessor 'org.projectlombok:lombok'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
//	testImplementation 'org.springframework.security:spring-security-test'
//}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
